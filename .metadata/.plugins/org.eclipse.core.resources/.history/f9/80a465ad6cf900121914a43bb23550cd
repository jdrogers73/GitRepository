package edu.rogers.thekillersbattleborntour;

import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.AccessToken;
import twitter4j.auth.RequestToken;



import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class TwitterActivity extends Activity
{
	Button mButtonTweets;
	String JSONString = null;
	TextView JSONContent;
	
	class GetTwitterTimeline extends AsyncTask<Void, String, String>
	{
		@Override
		protected String doInBackground(Void... params) 
		{
			onProgressUpdate("Beginning Request for timeline");
			//Log.d("Twitter4j", "Beginning Request for timeline");
			
			try
			{
				onProgressUpdate("Creating twitter object");
				Twitter twitter = new TwitterFactory().getInstance();
				
				try
				{
					onProgressUpdate("Getting authorization token");
					
					twitter.setOAuthConsumer("5UjTpE4rVVZ2idZgxFFEGA", "uh6ZlPxIVvU5JIPCEuhUQzoUVnQFvxQ2t37gOTYHB4");
					
					onProgressUpdate("Save token in requestToken");
					
					RequestToken requestToken = twitter.getOAuthRequestToken();
					AccessToken accessToken = null;
					
					onProgressUpdate("Getting Authorization Token");
					while (accessToken == null)
					{
						onProgressUpdate(requestToken.getAuthenticationURL());
						try
						{
							accessToken = twitter.getOAuthAccessToken(requestToken);
						}//try
						catch(TwitterException te)
						{
							if (te.getStatusCode() == 401)
							{
								onProgressUpdate("Unable to get the access token");
							}//if
							else
							{
								te.printStackTrace();
							}//else
						}//catch
					}//while
					onProgressUpdate("Got Access Token");
					onProgressUpdate("Access Token: " + accessToken.getToken());
					onProgressUpdate("Access Token Secret: " + accessToken.getTokenSecret());
				}//try
				catch (IllegalStateException ie)
				{
					if(!twitter.getAuthorization().isEnabled())
					{
						onProgressUpdate("OAuth consumer key/secret is not set.");
					}//if
				}//catch
			}//try
			catch (TwitterException te)
			{
				te.printStackTrace();
				onProgressUpdate("Failed to get timeline");
			}//catch
			
			String JSONString = "JSON content will go here";
			
			return JSONString;
		}//doInBackground
		
		protected void onProgressUpdate(String logEntry)
		{
			Log.d("twitter4j", logEntry);
		}
		
		@Override
		protected void onPostExecute(String jsonString)
		{
			JSONString = jsonString;
		}
			
	}//end inner class

    @Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_twitter);
		
		new GetTwitterTimeline().execute();
		
		JSONContent = (TextView) findViewById(R.id.textview_tweets);

		mButtonTweets = (Button) findViewById(R.id.button_tweets);
		mButtonTweets.setOnClickListener(new OnClickListener()
		{
			@Override
			public void onClick(View v)
			{
				//TwitterActivity.GetTwitterTimeline timeline = new GetTwitterTimeline();
				//JSONString = timeline.doInBackground(); 
				JSONContent.setText(JSONString);
			}
		});
		
	}
}